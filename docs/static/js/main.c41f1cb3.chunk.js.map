{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCIhBG,EAVK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCcGK,EApBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACRN,EADQ,iDACwCO,UACpDF,GAFY,8DAIUG,MAAMR,GAJhB,cAIRS,EAJQ,gBAKSA,EAAUC,OALnB,uBAKNC,EALM,EAKNA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,UAAUhB,QAXjB,kBAePY,GAfO,4CAAH,sDC0BEK,EAtBM,SAAEZ,GAEvB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAM,SAAAC,GAClBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGhB,CAACb,IAGGc,GCQQK,EAzBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGf,EAAkCY,EAAaZ,GAAjCU,EAAd,EAASJ,KAAaO,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIjB,UAAU,oCAAd,SAAmDI,IAElDa,GACC,mBAAGjB,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,SAI1B,4CCcO2B,EAjCM,WAEnB,MAAoCzC,mBAAS,CAC3C,iBADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACE,qCACE,gDAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWb,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCnBnBsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c41f1cb3.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if (inputValue.trim().length >2) {\n          setCategories((cats) => [inputValue, ...cats]);\n          setInputValue('');\n      }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default AddCategory;","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n    return (\n      <div className=\"card animate__animated animate__fadeIn\">\n        <img src={url} alt={title} />\n        <p>{title}</p>\n      </div>\n    );\n}\n\n\nexport default GifGridItem;","const getGifs = async ( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=5&api_key=U2eH7yl5K0M5whcUvlB6juLDtlIJZEMP`;\n  const respuesta = await fetch(url);\n  const { data } = await respuesta.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized.url,\n    };\n  });\n\n  return gifs;\n  \n};\n\n\nexport default getGifs;","import { useState, useEffect } from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\n\nconst useFetchGifs = ( category ) =>{\n\nconst [state, setstate] = useState({\n    data: [],\n    loading: true\n})\n\nuseEffect(() => {\n  getGifs(category).then( imgs => { \n        setstate({\n          data: imgs,\n          loading: false,\n        });\n    } );\n}, [category]);\n\n\nreturn state;\n\n\n}\n\nexport default useFetchGifs;","import React from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport useFetchGifs from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n\n    const  { data:images, loading } = useFetchGifs(category);\n\n    return (\n      <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && (\n          <p className=\"animate__animated animate__flash\">Loading...</p>\n        )}\n\n        <div className=\"card-grid\">\n          {images.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </div>\n\n        <p>By OHS.</p>\n      </>\n    );\n}\n\n\nexport default GifGrid;","import React, { useState } from \"react\";\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () =>{\n\n  const [categories, setCategories] = useState([\n    \"power ranger\"\n  ]);\n\n//   const hadleAdd = () =>{\n//       //setCategories( [...categories, 'Zoid']);\n//       setCategories(cats => [...cats, 'Zoid']);\n//   }\n\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n\n      <ol>\n        {\n          categories.map(category =>(\n            <GifGrid \n              key={category}\n              category={category} \n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExperApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}